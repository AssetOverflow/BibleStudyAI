# @format
services:
  # FastAPI Backend
  fastapi-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@timescaledb:${POSTGRES_PORT}/${POSTGRES_DB}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis-stack:${REDIS_PORT}
      - KAFKA_BOOTSTRAP_SERVERS=redpanda:9092
      - DEEPHAVEN_SERVER=http://deephaven:10000
      - MILVUS_HOST=milvus
      - MILVUS_PORT=19530
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - XAI_API_KEY=${XAI_API_KEY}
    depends_on:
      - timescaledb
      - redis-stack
      - redpanda
      - deephaven
      - milvus
      - neo4j
    env_file:
      - .env
    networks:
      - biblestudyai-network

  # React Frontend (Vite)
  react-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:5173"
    environment:
      - VITE_API_URL=http://fastapi-backend:8000
      - VITE_WS_URL=ws://fastapi-backend:8000
    depends_on:
      - fastapi-backend
    networks:
      - biblestudyai-network

  # TimescaleDB with pgvectorscale
  timescaledb:
    image: timescale/timescaledb-ha:pg17
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - biblestudyai-network

  # Redis Stack (includes RedisJSON, RedisSearch, RedisTimeSeries)
  redis-stack:
    image: redis/redis-stack:latest
    environment:
      - REDIS_ARGS=--requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
      - "8001:8001" # RedisInsight
    volumes:
      - redis_data:/data
    networks:
      - biblestudyai-network

  # Deephaven Server
  deephaven:
    image: ghcr.io/deephaven/server:latest
    ports:
      - "10000:10000"
    environment:
      - START_OPTS=-Xmx4g -DAuthHandlers=io.deephaven.auth.AnonymousAuthenticationHandler
    networks:
      - biblestudyai-network

  # Redpanda Kafka
  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:latest
    command:
      - redpanda
      - start
    ports:
      - "9092:9092"
      - "8082:8082"
      - "8081:8081"
      - "9644:9644"
    volumes:
      - redpanda_data:/var/lib/redpanda/data
    networks:
      - biblestudyai-network

  # Milvus Vector Database
  milvus:
    image: milvusdb/milvus:latest
    command: ["milvus", "run", "standalone"]
    environment:
      - ETCD_ENDPOINTS=etcd:2379
      - MINIO_ADDRESS=minio:9000
    ports:
      - "19530:19530"
    volumes:
      - milvus_data:/var/lib/milvus/data
    networks:
      - biblestudyai-network

  # MinIO for Milvus
  minio:
    image: minio/minio:latest
    environment:
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    command: minio server /minio_data
    ports:
      - "9000:9000"
    volumes:
      - minio_data:/data
    networks:
      - biblestudyai-network

  # etcd for Milvus
  etcd:
    image: quay.io/coreos/etcd:v3.5.0
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    volumes:
      - etcd_data:/etcd
    networks:
      - biblestudyai-network

  # Neo4j Graph Database
  neo4j:
    image: neo4j:5
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use_neo4j_config=true
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
    networks:
      - biblestudyai-network

volumes:
  timescaledb_data:
  redis_data:
  redpanda_data:
  milvus_data:
  etcd_data:
  minio_data:
  neo4j_data:

networks:
  biblestudyai-network:
    driver: bridge
